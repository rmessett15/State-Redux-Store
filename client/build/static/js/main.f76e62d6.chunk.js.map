{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","React","createElement","Object","assign","useStoreContext","useContext","ProductItem","item","_useStoreContext","_useStoreContext2","image","name","price","quantity","className","Link","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","removeItem","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_callee","_context","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","Fragment","description","disabled","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":";oGAAAA,EAAOC,QAAU,IAA0B,qC,2OCOpC,SAASC,EAAWC,EAAWC,EAAQC,GAC5C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACIC,EAAIC,EAAIC,EADNC,EAAUC,OAAOC,UAAUC,KAAK,YAAa,GAEnDH,EAAQI,gBAAkB,SAASC,GACjC,IAAMR,EAAKG,EAAQM,OACnBT,EAAGU,kBAAkB,WAAY,CAAEC,QAAS,QAC5CX,EAAGU,kBAAkB,aAAc,CAAEC,QAAS,QAC9CX,EAAGU,kBAAkB,OAAQ,CAAEC,QAAS,SAG1CR,EAAQS,QAAU,SAASJ,GACzBK,QAAQC,IAAI,uBAGdX,EAAQY,UAAY,SAASP,GAS3B,OARAR,EAAKG,EAAQM,OACbR,EAAKD,EAAGgB,YAAYtB,EAAW,aAC/BQ,EAAQD,EAAGgB,YAAYvB,GAEvBM,EAAGY,QAAU,SAASJ,GACpBK,QAAQC,IAAI,QAASN,IAGfb,GACN,IAAK,MACHO,EAAMgB,IAAItB,GACVE,EAAQF,GACR,MACF,IAAK,MACH,IAAMuB,EAAMjB,EAAMkB,SAClBD,EAAIJ,UAAY,WACdjB,EAAQqB,EAAIV,SAEd,MACF,IAAK,SACHP,EAAMmB,OAAOzB,EAAO0B,KACpB,MACF,QACET,QAAQC,IAAI,mBAIhBb,EAAGsB,WAAa,WACdvB,EAAGwB,a,oBCtCEC,EAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MACb,ICf2B,kBDgBzB,OAAAC,wBAAA,GACKH,GAAK,IACRI,SAAQC,YAAMJ,EAAOG,YAGzB,ICnBuB,cDoBrB,OAAAD,wBAAA,GACKH,GAAK,IACRM,UAAU,EACVC,KAAK,GAADC,OAAAH,YAAML,EAAMO,MAAI,CAAEN,EAAOQ,YAGjC,ICzBgC,uBD0B9B,OAAAN,wBAAA,GACKH,GAAK,IACRO,KAAK,GAADC,OAAAH,YAAML,EAAMO,MAAIF,YAAKJ,EAAOG,aAGpC,IC5BgC,uBD6B9B,OAAAD,wBAAA,GACKH,GAAK,IACRM,UAAU,EACVC,KAAMP,EAAMO,KAAKG,KAAI,SAAAD,GAInB,OAHIR,EAAOL,MAAQa,EAAQb,MACzBa,EAAQE,iBAAmBV,EAAOU,kBAE7BF,OAIb,IC1C4B,mBD2C1B,IAAIG,EAAWZ,EAAMO,KAAKM,QAAO,SAAAJ,GAC/B,OAAOA,EAAQb,MAAQK,EAAOL,OAGhC,OAAAO,wBAAA,GACKH,GAAK,IACRM,SAAUM,EAASE,OAAS,EAC5BP,KAAMK,IAGV,ICpDsB,aDqDpB,OAAAT,wBAAA,GACKH,GAAK,IACRM,UAAU,EACVC,KAAM,KAGV,ICzDuB,cD0DrB,OAAAJ,wBAAA,GACKH,GAAK,IACRM,UAAWN,EAAMM,WAGrB,IC7D6B,oBD8D3B,OAAAH,wBAAA,GACKH,GAAK,IACRe,WAAUV,YAAMJ,EAAOc,cAG3B,IClEmC,0BDmEjC,OAAAZ,wBAAA,GACKH,GAAK,IACRgB,gBAAiBf,EAAOe,kBAG5B,QACE,OAAOhB,I,gBEhFPiB,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAHC,GAAiCA,EAA3BC,MAA4B,IFiFnBC,EEjFMC,EAAKC,YAAAJ,EAAAK,GAC3CC,GFgFgCJ,EEhFY,CAC1CnB,SAAU,GACVG,KAAM,GACND,UAAU,EACVS,WAAY,GACZC,gBAAiB,IF4EZY,qBAAW7B,EAASwB,IE3EzBM,EAAAC,YAAAH,EAAA,GANK3B,EAAK6B,EAAA,GAAEE,EAAQF,EAAA,GAQtB,OAAOG,IAAAC,cAACd,EAAQe,OAAAC,OAAA,CAACb,MAAO,CAACtB,EAAO+B,IAAeP,KAG3CY,EAAkB,WACtB,OAAOC,qBAAWpB,ICwCLqB,I,UAAAA,EApDf,SAAqBC,GACnB,IAAAC,EAA0BJ,IAAiBK,EAAAX,YAAAU,EAAA,GAApCxC,EAAKyC,EAAA,GAAEV,EAAQU,EAAA,GAGpBC,EAKEH,EALFG,MACAC,EAIEJ,EAJFI,KACA/C,EAGE2C,EAHF3C,IACAgD,EAEEL,EAFFK,MACAC,EACEN,EADFM,SAGMtC,EAASP,EAATO,KAuBR,OACEyB,IAAAC,cAAA,OAAKa,UAAU,kBACbd,IAAAC,cAACc,IAAI,CAACC,GAAE,aAAAxC,OAAeZ,IACrBoC,IAAAC,cAAA,OACEgB,IAAKN,EACLO,IAAG,WAAA1C,OAAakC,KAElBV,IAAAC,cAAA,SAAIU,IAENX,IAAAC,cAAA,WACED,IAAAC,cAAA,WAAMY,EAAS,IJnDhB,SAAmBF,EAAMQ,GAC9B,OAAc,IAAVA,EACKR,EAEFA,EAAO,II+CSS,CAAU,OAAQP,GAAU,aAC7Cb,IAAAC,cAAA,YAAM,IAAEW,IAEVZ,IAAAC,cAAA,UAAQoB,QAlCM,WAChB,IAAMC,EAAa/C,EAAKgD,MAAK,SAACC,GAAQ,OAAKA,EAAS5D,MAAQA,KACxD0D,GACFvB,EAAS,CACP7B,KFlB4B,uBEmB5BN,IAAKA,EACLe,iBAAkB8C,SAASH,EAAW3C,kBAAoB,IAE5D5C,EAAW,OAAQ,MAAKoC,wBAAA,GACnBmD,GAAU,IACb3C,iBAAkB8C,SAASH,EAAW3C,kBAAoB,OAG5DoB,EAAS,CACP7B,KFhCmB,cEiCnBO,QAAON,wBAAA,GAAOoC,GAAI,IAAE5B,iBAAkB,MAExC5C,EAAW,OAAQ,MAAKoC,wBAAA,GAAOoC,GAAI,IAAE5B,iBAAkB,QAiB3B,iB,yBCpDrB+C,EAAiBC,YAAGC,MAAAC,YAAA,6NAgBpBC,EAAiBH,YAAGI,MAAAF,YAAA,mHAuBpBG,GAfqBL,YAAGM,MAAAJ,YAAA,2JAeLF,YAAGO,MAAAL,YAAA,qEAStBM,EAAaR,YAAGS,MAAAP,YAAA,+Q,iBCmBdQ,MA5Df,WACE,IAAA7B,EAA0BJ,IAAiBK,EAAAX,YAAAU,EAAA,GAApCxC,EAAKyC,EAAA,GAAEV,EAAQU,EAAA,GAEdzB,EAAoBhB,EAApBgB,gBAERsD,EAA0BC,YAASb,GAA3Bc,EAAOF,EAAPE,QAASC,EAAIH,EAAJG,KA+BjB,OA7BAC,qBAAU,WACJD,GACF1C,EAAS,CACP7B,KJnBuB,kBIoBvBE,SAAUqE,EAAKrE,WAEjBqE,EAAKrE,SAASuE,SAAQ,SAAClE,GACrB1C,EAAW,WAAY,MAAO0C,OAEtB+D,GACVzG,EAAW,WAAY,OAAO6G,MAAK,SAACxE,GAClC2B,EAAS,CACP7B,KJ5BqB,kBI6BrBE,SAAUA,SAIf,CAACqE,EAAMD,EAASzC,IAajBC,IAAAC,cAAA,OAAKa,UAAU,QACbd,IAAAC,cAAA,UAAI,iBACHjC,EAAMI,SAASU,OACdkB,IAAAC,cAAA,OAAKa,UAAU,aAbd9B,EAIEhB,EAAMI,SAASS,QACpB,SAACJ,GAAO,OAAKA,EAAQoE,SAASjF,MAAQoB,KAJ/BhB,EAAMI,UAaSM,KAAI,SAACD,GAAO,OAC5BuB,IAAAC,cAACK,EAAW,CACVwC,IAAKrE,EAAQb,IACbA,IAAKa,EAAQb,IACb8C,MAAOjC,EAAQiC,MACfC,KAAMlC,EAAQkC,KACdC,MAAOnC,EAAQmC,MACfC,SAAUpC,EAAQoC,eAKxBb,IAAAC,cAAA,UAAI,uCAELuC,EAAUxC,IAAAC,cAAA,OAAKiB,IAAK6B,IAAS9B,IAAI,YAAe,OCJxC+B,MAlDf,WACE,IAAAxC,EAA0BJ,IAAiBK,EAAAX,YAAAU,EAAA,GAApCxC,EAAKyC,EAAA,GAAEV,EAAQU,EAAA,GAEd1B,EAAef,EAAfe,WAERuD,EAAwCC,YAASP,GAAzCQ,EAAOF,EAAPE,QAAeS,EAAYX,EAAlBG,KA4BjB,OA1BAC,qBAAU,WACJO,GACFlD,EAAS,CACP7B,KLXyB,oBKYzBa,WAAYkE,EAAalE,aAE3BkE,EAAalE,WAAW4D,SAAQ,SAACE,GAC/B9G,EAAW,aAAc,MAAO8G,OAExBL,GACVzG,EAAW,aAAc,OAAO6G,MAAK,SAAC7D,GACpCgB,EAAS,CACP7B,KLpBuB,oBKqBvBa,WAAYA,SAIjB,CAACkE,EAAcT,EAASzC,IAUzBC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,sBACHlB,EAAWL,KAAI,SAAC6B,GAAI,OACnBP,IAAAC,cAAA,UACE6C,IAAKvC,EAAK3C,IACVyD,QAAS,WAbG,IAAC6B,IAcC3C,EAAK3C,IAbzBmC,EAAS,CACP7B,KL5BiC,0BK6BjCc,gBAAiBkE,MAcZ3C,EAAKI,W,wBCgBDwC,EAhEE,SAAH9D,GAAkB,IAAZkB,EAAIlB,EAAJkB,KAElBC,EAAqBJ,IAAZL,EAA6BD,YAAAU,EAAA,GAArB,GA+BjB,OACER,IAAAC,cAAA,OAAKa,UAAU,YACbd,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,IAAG,WAAA1C,OAAa+B,EAAKG,OACrBO,IAAI,MAGRjB,IAAAC,cAAA,WACED,IAAAC,cAAA,WAAMM,EAAKI,KAAK,MAAIJ,EAAKK,OACzBZ,IAAAC,cAAA,WACED,IAAAC,cAAA,YAAM,QACND,IAAAC,cAAA,SACE/B,KAAK,SACLkF,YAAY,IACZ9D,MAAOiB,EAAK5B,iBACZ0E,SApCO,SAACvG,GAChB,IAAMwC,EAAQxC,EAAEwG,OAAOhE,MACT,MAAVA,GACFS,EAAS,CACP7B,KNlBwB,mBMmBxBN,IAAK2C,EAAK3C,MAEZ7B,EAAW,OAAQ,SAAQoC,YAAA,GAAOoC,MAGlCR,EAAS,CACP7B,KNvB4B,uBMwB5BN,IAAK2C,EAAK3C,IACVe,iBAAkB8C,SAASnC,KAE7BvD,EAAW,OAAQ,MAAKoC,wBAAA,GAAOoC,GAAI,IAAE5B,iBAAkB8C,SAASnC,UAuB5DU,IAAAC,cAAA,QACEsD,KAAK,MACLC,aAAW,QACXnC,QAAS,kBAlDI,SAAAd,GACrBR,EAAS,CACP7B,KNP0B,mBMQ1BN,IAAK2C,EAAK3C,MAEZ7B,EAAW,OAAQ,SAAQoC,YAAA,GAAOoC,IA6CXkD,CAAelD,KAC/B,0B,iCChBI,MA1CE,oBAAAmD,IAAAC,YAAA,KAAAD,GAuCd,OAvCcE,YAAAF,EAAA,EAAAZ,IAAA,aAAAxD,MACf,WACE,OAAOuE,IAAOC,KAAKC,cACpB,CAAAjB,IAAA,WAAAxD,MAED,WAEE,IAAM0E,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,KACxC,CAAAlB,IAAA,iBAAAxD,MAED,SAAe0E,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,KAEV,CAAAvB,IAAA,WAAAxD,MAED,WAEE,OAAOgF,aAAaC,QAAQ,cAC7B,CAAAzB,IAAA,QAAAxD,MAED,SAAMkF,GAEJF,aAAaG,QAAQ,WAAYD,GAEjC9H,OAAOgI,SAASvE,OAAO,OACxB,CAAA2C,IAAA,SAAAxD,MAED,WAEEgF,aAAaK,WAAW,YAExBjI,OAAOgI,SAASvE,OAAO,SACxBuD,EAvCc,I,mBCDjBkB,EAAA,kBAAA9H,GAAA,IAAA+H,EAAA/H,EAAA,GAAAgI,EAAA5E,OAAA6E,UAAAC,EAAAF,EAAAG,eAAAC,EAAAhF,OAAAiF,gBAAA,SAAAN,EAAA/H,EAAAgI,GAAAD,EAAA/H,GAAAgI,EAAAxF,OAAA8F,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAf,EAAA/H,EAAAgI,GAAA,OAAA5E,OAAAiF,eAAAN,EAAA/H,EAAA,CAAAwC,MAAAwF,EAAAe,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAlB,EAAA/H,GAAA,IAAA8I,EAAA,aAAAf,GAAAe,EAAA,SAAAf,EAAA/H,EAAAgI,GAAA,OAAAD,EAAA/H,GAAAgI,GAAA,SAAAkB,EAAAnB,EAAA/H,EAAAgI,EAAAE,GAAA,IAAAI,EAAAtI,KAAAiI,qBAAAkB,EAAAnJ,EAAAmJ,EAAAX,EAAApF,OAAAgG,OAAAd,EAAAL,WAAAS,EAAA,IAAAW,EAAAnB,GAAA,WAAAE,EAAAI,EAAA,WAAAhG,MAAA8G,EAAAvB,EAAAC,EAAAU,KAAAF,EAAA,SAAAe,EAAAxB,EAAA/H,EAAAgI,GAAA,WAAA5G,KAAA,SAAAoI,IAAAzB,EAAA0B,KAAAzJ,EAAAgI,IAAA,MAAAD,GAAA,OAAA3G,KAAA,QAAAoI,IAAAzB,IAAA/H,EAAAkJ,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAA7G,OAAA8G,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAnC,GAAAE,EAAAuB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA9B,UAAAkB,EAAAlB,UAAA7E,OAAAgG,OAAAY,GAAA,SAAAM,EAAAvC,GAAA,0BAAAlC,SAAA,SAAA7F,GAAA8I,EAAAf,EAAA/H,GAAA,SAAA+H,GAAA,YAAAwC,QAAAvK,EAAA+H,SAAA,SAAAyC,EAAAzC,EAAA/H,GAAA,SAAAyK,EAAAzC,EAAAI,EAAAE,EAAAE,GAAA,IAAAE,EAAAa,EAAAxB,EAAAC,GAAAD,EAAAK,GAAA,aAAAM,EAAAtH,KAAA,KAAAwH,EAAAF,EAAAc,IAAAE,EAAAd,EAAApG,MAAA,OAAAkH,GAAA,iBAAAA,GAAAxB,EAAAuB,KAAAC,EAAA,WAAA1J,EAAAV,QAAAoK,EAAAgB,SAAA5E,MAAA,SAAAiC,GAAA0C,EAAA,OAAA1C,EAAAO,EAAAE,MAAA,SAAAT,GAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,MAAAxI,EAAAV,QAAAoK,GAAA5D,MAAA,SAAAiC,GAAAa,EAAApG,MAAAuF,EAAAO,EAAAM,MAAA,SAAAb,GAAA,OAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,QAAAE,EAAAc,KAAA,IAAAxB,EAAAI,EAAA,gBAAA5F,MAAA,SAAAuF,EAAAG,GAAA,SAAAyC,IAAA,WAAA3K,GAAA,SAAAA,EAAAgI,GAAAyC,EAAA1C,EAAAG,EAAAlI,EAAAgI,MAAA,OAAAA,MAAAlC,KAAA6E,YAAA,SAAArB,EAAAtJ,EAAAgI,EAAAE,GAAA,IAAAE,EAAAsB,EAAA,gBAAApB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,UAAAiB,MAAA,mCAAAxC,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAAhG,MAAAuF,EAAA8C,MAAA,OAAA3C,EAAA/I,OAAAmJ,EAAAJ,EAAAsB,IAAAhB,IAAA,KAAAE,EAAAR,EAAA4C,SAAA,GAAApC,EAAA,KAAAE,EAAAmC,EAAArC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAV,EAAA/I,OAAA+I,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAsB,SAAA,aAAAtB,EAAA/I,OAAA,IAAAiJ,IAAAsB,EAAA,MAAAtB,EAAAwB,EAAA1B,EAAAsB,IAAAtB,EAAAgD,kBAAAhD,EAAAsB,SAAA,WAAAtB,EAAA/I,QAAA+I,EAAAiD,OAAA,SAAAjD,EAAAsB,KAAApB,EAAAuB,EAAA,IAAAK,EAAAT,EAAAvJ,EAAAgI,EAAAE,GAAA,cAAA8B,EAAA5I,KAAA,IAAAgH,EAAAF,EAAA2C,KAAAjB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAArH,MAAAwH,EAAAR,IAAAqB,KAAA3C,EAAA2C,MAAA,UAAAb,EAAA5I,OAAAgH,EAAAwB,EAAA1B,EAAA/I,OAAA,QAAA+I,EAAAsB,IAAAQ,EAAAR,OAAA,SAAAuB,EAAA/K,EAAAgI,GAAA,IAAAE,EAAAF,EAAA7I,OAAAiJ,EAAApI,EAAAyI,SAAAP,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAAlI,EAAAyI,SAAA2C,SAAApD,EAAA7I,OAAA,SAAA6I,EAAAwB,IAAAzB,EAAAgD,EAAA/K,EAAAgI,GAAA,UAAAA,EAAA7I,SAAA,WAAA+I,IAAAF,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAAnD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAiB,EAAAnB,EAAApI,EAAAyI,SAAAT,EAAAwB,KAAA,aAAAlB,EAAAlH,KAAA,OAAA4G,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAAlB,EAAAkB,IAAAxB,EAAA8C,SAAA,KAAAjB,EAAA,IAAArB,EAAAF,EAAAkB,IAAA,OAAAhB,IAAAqC,MAAA7C,EAAAhI,EAAAsL,YAAA9C,EAAAhG,MAAAwF,EAAAuD,KAAAvL,EAAAwL,QAAA,WAAAxD,EAAA7I,SAAA6I,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,GAAAC,EAAA8C,SAAA,KAAAjB,GAAArB,GAAAR,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAjB,GAAA,SAAA4B,EAAA1D,GAAA,IAAA/H,EAAA,CAAA0L,OAAA3D,EAAA,SAAAA,IAAA/H,EAAA2L,SAAA5D,EAAA,SAAAA,IAAA/H,EAAA4L,WAAA7D,EAAA,GAAA/H,EAAA6L,SAAA9D,EAAA,SAAA+D,WAAAC,KAAA/L,GAAA,SAAAgM,EAAAjE,GAAA,IAAA/H,EAAA+H,EAAAkE,YAAA,GAAAjM,EAAAoB,KAAA,gBAAApB,EAAAwJ,IAAAzB,EAAAkE,WAAAjM,EAAA,SAAAqJ,EAAAtB,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAlC,QAAA4F,EAAA,WAAAS,OAAA,YAAA9B,EAAApK,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAgI,EAAAhI,EAAAwI,GAAA,GAAAR,EAAA,OAAAA,EAAAyB,KAAAzJ,GAAA,sBAAAA,EAAAuL,KAAA,OAAAvL,EAAA,IAAAmM,MAAAnM,EAAAgC,QAAA,KAAAoG,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAApI,EAAAgC,QAAA,GAAAkG,EAAAuB,KAAAzJ,EAAAoI,GAAA,OAAAmD,EAAA/I,MAAAxC,EAAAoI,GAAAmD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAArL,EAAA,2BAAA8J,EAAA7B,UAAA8B,EAAA3B,EAAAiC,EAAA,eAAA7H,MAAAuH,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAvH,MAAAsH,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA5I,EAAAqM,oBAAA,SAAAtE,GAAA,IAAA/H,EAAA,mBAAA+H,KAAAuE,YAAA,QAAAtM,QAAA8J,GAAA,uBAAA9J,EAAAoM,aAAApM,EAAA6D,QAAA7D,EAAAuM,KAAA,SAAAxE,GAAA,OAAA3E,OAAAoJ,eAAApJ,OAAAoJ,eAAAzE,EAAAgC,IAAAhC,EAAA0E,UAAA1C,EAAAjB,EAAAf,EAAAa,EAAA,sBAAAb,EAAAE,UAAA7E,OAAAgG,OAAAiB,GAAAtC,GAAA/H,EAAA0M,MAAA,SAAA3E,GAAA,OAAA2C,QAAA3C,IAAAuC,EAAAE,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAA1I,EAAAwK,gBAAAxK,EAAA2M,MAAA,SAAA5E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAjJ,SAAA,IAAAmJ,EAAA,IAAAgC,EAAAtB,EAAAnB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAtI,EAAAqM,oBAAArE,GAAAQ,IAAA+C,OAAAzF,MAAA,SAAAiC,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAvF,MAAAgG,EAAA+C,WAAAjB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAArK,EAAA4M,KAAA,SAAA7E,GAAA,IAAA/H,EAAAoD,OAAA2E,GAAAC,EAAA,WAAAE,KAAAlI,EAAAgI,EAAA+D,KAAA7D,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAhG,QAAA,KAAA+F,EAAAC,EAAA8E,MAAA,GAAA/E,KAAA/H,EAAA,OAAAuL,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAAvL,EAAAoK,SAAAf,EAAApB,UAAA,CAAAqE,YAAAjD,EAAA6C,MAAA,SAAAlM,GAAA,QAAA+M,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAlD,EAAA,KAAA8C,MAAA,OAAAC,SAAA,UAAA3L,OAAA,YAAAqK,IAAAzB,EAAA,KAAA+D,WAAAjG,QAAAmG,IAAAhM,EAAA,QAAAgI,KAAA,WAAAA,EAAAgF,OAAA,IAAA9E,EAAAuB,KAAA,KAAAzB,KAAAmE,OAAAnE,EAAAiF,MAAA,WAAAjF,GAAAD,IAAAmF,KAAA,gBAAArC,MAAA,MAAA9C,EAAA,KAAA+D,WAAA,GAAAG,WAAA,aAAAlE,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,YAAA2D,MAAAjC,kBAAA,SAAAlL,GAAA,QAAA6K,KAAA,MAAA7K,EAAA,IAAAgI,EAAA,cAAAoF,EAAAlF,EAAAE,GAAA,OAAAI,EAAApH,KAAA,QAAAoH,EAAAgB,IAAAxJ,EAAAgI,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,KAAAK,EAAA,QAAAA,EAAA,KAAA0D,WAAA9J,OAAA,EAAAoG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAwD,WAAA1D,GAAAI,EAAAF,EAAA2D,WAAA,YAAA3D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA,KAAAqB,KAAA,KAAArE,EAAAR,EAAAuB,KAAAnB,EAAA,YAAAM,EAAAV,EAAAuB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAmE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,WAAAoB,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAlD,GAAA,QAAAqE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAA/C,EAAA,UAAAgC,MAAA,kDAAAmC,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAA/H,GAAA,QAAAgI,EAAA,KAAA8D,WAAA9J,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAI,EAAA,KAAA0D,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA,KAAAqB,MAAA7E,EAAAuB,KAAArB,EAAA,oBAAA2E,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA1L,MAAAsI,EAAAsD,aAAAtD,EAAA,UAAAE,EAAAF,IAAA2D,WAAA,UAAAzD,EAAApH,KAAA2G,EAAAS,EAAAgB,IAAAxJ,EAAAsI,GAAA,KAAAnJ,OAAA,YAAAoM,KAAAjD,EAAAsD,WAAA/B,GAAA,KAAAwD,SAAA7E,IAAA6E,SAAA,SAAAtF,EAAA/H,GAAA,aAAA+H,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,gBAAAzB,EAAA3G,MAAA,aAAA2G,EAAA3G,KAAA,KAAAmK,KAAAxD,EAAAyB,IAAA,WAAAzB,EAAA3G,MAAA,KAAA+L,KAAA,KAAA3D,IAAAzB,EAAAyB,IAAA,KAAArK,OAAA,cAAAoM,KAAA,kBAAAxD,EAAA3G,MAAApB,IAAA,KAAAuL,KAAAvL,GAAA6J,GAAAyD,OAAA,SAAAvF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA4D,aAAA7D,EAAA,YAAAsF,SAAArF,EAAAiE,WAAAjE,EAAA6D,UAAAG,EAAAhE,GAAA6B,IAAA0D,MAAA,SAAAxF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAiE,WAAA,aAAA/D,EAAA9G,KAAA,KAAAgH,EAAAF,EAAAsB,IAAAwC,EAAAhE,GAAA,OAAAI,GAAA,UAAAwC,MAAA,0BAAA4C,cAAA,SAAAxN,EAAAgI,EAAAE,GAAA,YAAA4C,SAAA,CAAArC,SAAA2B,EAAApK,GAAAsL,WAAAtD,EAAAwD,QAAAtD,GAAA,cAAA/I,SAAA,KAAAqK,IAAAzB,GAAA8B,IAAA7J,EAUA,IAAMyN,EAAgBC,YAAW,oCA+FlBC,EA7FF,WACX,IAAAjK,EAA0BJ,IAAiBK,EAAAX,YAAAU,EAAA,GAApCxC,EAAKyC,EAAA,GAAEV,EAAQU,EAAA,GACtBiK,EAAgCC,YAAa7I,GAAe8I,EAAA9K,YAAA4K,EAAA,GAArDG,EAAWD,EAAA,GAAInI,EAAImI,EAAA,GAAJnI,KAqBtB,SAASqI,IACP/K,EAAS,CAAE7B,KR9BY,gBQuDzB,OA7CAwE,qBAAU,WACJD,GACF8H,EAAc3H,MAAK,SAACmI,GAClBA,EAAIC,mBAAmB,CAAEC,UAAWxI,EAAKyI,SAASC,eAGrD,CAAC1I,IAEJC,qBAAU,WACc,SAAA0I,IAGrB,OAHqBA,EAAAC,YAAAzG,IAAAyE,MAAtB,SAAAiC,IAAA,IAAA/M,EAAA,OAAAqG,IAAAoB,MAAA,SAAAuF,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAlD,MAAA,cAAAkD,EAAAlD,KAAA,EACqBtM,EAAW,OAAQ,OAAO,KAAD,EAAtCwC,EAAIgN,EAAAzD,KACV/H,EAAS,CAAE7B,KRzBmB,uBQyBSE,SAAQC,YAAME,KAAS,wBAAAgN,EAAAvB,UAAAsB,QAC/DE,MAAA,KAAAC,WAEIzN,EAAMO,KAAKO,QAND,WACOsM,EAAAI,MAAC,KAADC,WAMpBC,KAED,CAAC1N,EAAMO,KAAKO,OAAQiB,IA4BlB/B,EAAMM,SAWT0B,IAAAC,cAAA,OAAKa,UAAU,QACbd,IAAAC,cAAA,OAAKa,UAAU,QAAQO,QAASyJ,GAAY,WAG5C9K,IAAAC,cAAA,UAAI,iBACHjC,EAAMO,KAAKO,OACVkB,IAAAC,cAAA,WACGjC,EAAMO,KAAKG,KAAI,SAAC6B,GAAI,OACnBP,IAAAC,cAACkD,EAAQ,CAACL,IAAKvC,EAAK3C,IAAK2C,KAAMA,OAGjCP,IAAAC,cAAA,OAAKa,UAAU,0BACbd,IAAAC,cAAA,cAAQ,WA7ClB,WACE,IAAI0L,EAAM,EAIV,OAHA3N,EAAMO,KAAKoE,SAAQ,SAACpC,GAClBoL,GAAOpL,EAAKK,MAAQL,EAAK5B,oBAEpBgN,EAAIC,QAAQ,GAwCMC,IAEhBC,EAAKC,WACJ/L,IAAAC,cAAA,UAAQoB,QAxCpB,WACE,IAAM2K,EAAa,GAEnBhO,EAAMO,KAAKoE,SAAQ,SAACpC,GAClB,IAAK,IAAI6E,EAAI,EAAGA,EAAI7E,EAAK5B,iBAAkByG,IACzC4G,EAAWnD,KAAKtI,EAAK3C,QAIzBiN,EAAY,CACVoB,UAAW,CAAE7N,SAAU4N,OA8BkB,YAEjChM,IAAAC,cAAA,YAAM,2BAKZD,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMsD,KAAK,MAAMC,aAAW,WAAU,gBAE/B,iDAlCXxD,IAAAC,cAAA,OAAKa,UAAU,cAAcO,QAASyJ,GACpC9K,IAAAC,cAAA,QAAMsD,KAAK,MAAMC,aAAW,SAAQ,kBClD7B0I,GAVF,WACX,OACElM,IAAAC,cAAA,OAAKa,UAAU,aACbd,IAAAC,cAAC+C,EAAY,MACbhD,IAAAC,cAACoC,EAAW,MACZrC,IAAAC,cAACwK,EAAI,QC0GI0B,OApGf,WACE,IAAA3L,EAA0BJ,IAAiBK,EAAAX,YAAAU,EAAA,GAApCxC,EAAKyC,EAAA,GAAEV,EAAQU,EAAA,GACdyC,EAAOkJ,cAAPlJ,GAERmJ,EAA4CC,mBAAS,IAAGC,EAAAzM,YAAAuM,EAAA,GAAjDG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCjK,EAA0BC,YAASb,GAA3Bc,EAAOF,EAAPE,QAASC,EAAIH,EAAJG,KAETrE,EAAmBJ,EAAnBI,SAAUG,EAASP,EAATO,KA2DlB,OAzDAmE,qBAAU,WAEJtE,EAASU,OACX2N,EAAkBrO,EAASmD,MAAK,SAAC9C,GAAO,OAAKA,EAAQb,MAAQsF,MAGtDT,GACP1C,EAAS,CACP7B,KVlCuB,kBUmCvBE,SAAUqE,EAAKrE,WAGjBqE,EAAKrE,SAASuE,SAAQ,SAAClE,GACrB1C,EAAW,WAAY,MAAO0C,OAIxB+D,GACRzG,EAAW,WAAY,OAAO6G,MAAK,SAAC8J,GAClC3M,EAAS,CACP7B,KV9CqB,kBU+CrBE,SAAUsO,SAIf,CAACtO,EAAUqE,EAAMD,EAASzC,EAAUmD,IAiCrClD,IAAAC,cAAAD,IAAA2M,SAAA,KACGH,GAAkBjO,EACjByB,IAAAC,cAAA,OAAKa,UAAU,kBACbd,IAAAC,cAACc,IAAI,CAACC,GAAG,KAAI,2BAEbhB,IAAAC,cAAA,UAAKuM,EAAe7L,MAEpBX,IAAAC,cAAA,SAAIuM,EAAeI,aAEnB5M,IAAAC,cAAA,SACED,IAAAC,cAAA,cAAQ,UAAe,IAAEuM,EAAe5L,MAAO,IAC/CZ,IAAAC,cAAA,UAAQoB,QA1CA,WAChB,IAAMC,EAAa/C,EAAKgD,MAAK,SAACC,GAAQ,OAAKA,EAAS5D,MAAQsF,KACxD5B,GACFvB,EAAS,CACP7B,KVnD4B,uBUoD5BN,IAAKsF,EACLvE,iBAAkB8C,SAASH,EAAW3C,kBAAoB,IAE5D5C,EAAW,OAAQ,MAAKoC,wBAAA,GACnBmD,GAAU,IACb3C,iBAAkB8C,SAASH,EAAW3C,kBAAoB,OAG5DoB,EAAS,CACP7B,KVjEmB,cUkEnBO,QAAON,wBAAA,GAAOqO,GAAc,IAAE7N,iBAAkB,MAElD5C,EAAW,OAAQ,MAAKoC,wBAAA,GAAOqO,GAAc,IAAE7N,iBAAkB,QAyB/B,eAC5BqB,IAAAC,cAAA,UACE4M,UAAWtO,EAAKgD,MAAK,SAACuF,GAAC,OAAKA,EAAElJ,MAAQ4O,EAAe5O,OACrDyD,QAxBW,WACrBtB,EAAS,CACP7B,KVxE0B,mBUyE1BN,IAAK4O,EAAe5O,MAGtB7B,EAAW,OAAQ,SAAQoC,YAAA,GAAOqO,MAmBzB,qBAKHxM,IAAAC,cAAA,OACEiB,IAAG,WAAA1C,OAAagO,EAAe9L,OAC/BO,IAAKuL,EAAe7L,QAGtB,KACH6B,EAAUxC,IAAAC,cAAA,OAAKiB,IAAK6B,IAAS9B,IAAI,YAAe,KACjDjB,IAAAC,cAACwK,EAAI,QCnGIqC,I,SAAAA,GAVf,SAAkBzN,GAAgB,IAAb0N,EAAQ1N,EAAR0N,SACnB,OACE/M,IAAAC,cAAA,OACE+M,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,WAEhEL,ICWQM,GAfC,WACd,OACErN,IAAAC,cAAA,WACED,IAAAC,cAAC6M,GAAS,KACR9M,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMsD,KAAK,MAAMC,aAAW,gCAA+B,oB,kBCPxD8J,GAAQ3L,YAAGC,QAAAC,YAAA,iLAWX0L,GAAY5L,YAAGI,QAAAF,YAAA,mRAkBf2L,GAAW7L,YAAGM,QAAAJ,YAAA,gU,cC9B3B+C,GAAA,kBAAA9H,GAAA,IAAA+H,EAAA/H,EAAA,GAAAgI,EAAA5E,OAAA6E,UAAAC,EAAAF,EAAAG,eAAAC,EAAAhF,OAAAiF,gBAAA,SAAAN,EAAA/H,EAAAgI,GAAAD,EAAA/H,GAAAgI,EAAAxF,OAAA8F,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAf,EAAA/H,EAAAgI,GAAA,OAAA5E,OAAAiF,eAAAN,EAAA/H,EAAA,CAAAwC,MAAAwF,EAAAe,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAlB,EAAA/H,GAAA,IAAA8I,EAAA,aAAAf,GAAAe,EAAA,SAAAf,EAAA/H,EAAAgI,GAAA,OAAAD,EAAA/H,GAAAgI,GAAA,SAAAkB,EAAAnB,EAAA/H,EAAAgI,EAAAE,GAAA,IAAAI,EAAAtI,KAAAiI,qBAAAkB,EAAAnJ,EAAAmJ,EAAAX,EAAApF,OAAAgG,OAAAd,EAAAL,WAAAS,EAAA,IAAAW,EAAAnB,GAAA,WAAAE,EAAAI,EAAA,WAAAhG,MAAA8G,EAAAvB,EAAAC,EAAAU,KAAAF,EAAA,SAAAe,EAAAxB,EAAA/H,EAAAgI,GAAA,WAAA5G,KAAA,SAAAoI,IAAAzB,EAAA0B,KAAAzJ,EAAAgI,IAAA,MAAAD,GAAA,OAAA3G,KAAA,QAAAoI,IAAAzB,IAAA/H,EAAAkJ,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAA7G,OAAA8G,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAnC,GAAAE,EAAAuB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA9B,UAAAkB,EAAAlB,UAAA7E,OAAAgG,OAAAY,GAAA,SAAAM,EAAAvC,GAAA,0BAAAlC,SAAA,SAAA7F,GAAA8I,EAAAf,EAAA/H,GAAA,SAAA+H,GAAA,YAAAwC,QAAAvK,EAAA+H,SAAA,SAAAyC,EAAAzC,EAAA/H,GAAA,SAAAyK,EAAAzC,EAAAI,EAAAE,EAAAE,GAAA,IAAAE,EAAAa,EAAAxB,EAAAC,GAAAD,EAAAK,GAAA,aAAAM,EAAAtH,KAAA,KAAAwH,EAAAF,EAAAc,IAAAE,EAAAd,EAAApG,MAAA,OAAAkH,GAAA,iBAAAA,GAAAxB,EAAAuB,KAAAC,EAAA,WAAA1J,EAAAV,QAAAoK,EAAAgB,SAAA5E,MAAA,SAAAiC,GAAA0C,EAAA,OAAA1C,EAAAO,EAAAE,MAAA,SAAAT,GAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,MAAAxI,EAAAV,QAAAoK,GAAA5D,MAAA,SAAAiC,GAAAa,EAAApG,MAAAuF,EAAAO,EAAAM,MAAA,SAAAb,GAAA,OAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,QAAAE,EAAAc,KAAA,IAAAxB,EAAAI,EAAA,gBAAA5F,MAAA,SAAAuF,EAAAG,GAAA,SAAAyC,IAAA,WAAA3K,GAAA,SAAAA,EAAAgI,GAAAyC,EAAA1C,EAAAG,EAAAlI,EAAAgI,MAAA,OAAAA,MAAAlC,KAAA6E,YAAA,SAAArB,EAAAtJ,EAAAgI,EAAAE,GAAA,IAAAE,EAAAsB,EAAA,gBAAApB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,UAAAiB,MAAA,mCAAAxC,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAAhG,MAAAuF,EAAA8C,MAAA,OAAA3C,EAAA/I,OAAAmJ,EAAAJ,EAAAsB,IAAAhB,IAAA,KAAAE,EAAAR,EAAA4C,SAAA,GAAApC,EAAA,KAAAE,EAAAmC,EAAArC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAV,EAAA/I,OAAA+I,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAsB,SAAA,aAAAtB,EAAA/I,OAAA,IAAAiJ,IAAAsB,EAAA,MAAAtB,EAAAwB,EAAA1B,EAAAsB,IAAAtB,EAAAgD,kBAAAhD,EAAAsB,SAAA,WAAAtB,EAAA/I,QAAA+I,EAAAiD,OAAA,SAAAjD,EAAAsB,KAAApB,EAAAuB,EAAA,IAAAK,EAAAT,EAAAvJ,EAAAgI,EAAAE,GAAA,cAAA8B,EAAA5I,KAAA,IAAAgH,EAAAF,EAAA2C,KAAAjB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAArH,MAAAwH,EAAAR,IAAAqB,KAAA3C,EAAA2C,MAAA,UAAAb,EAAA5I,OAAAgH,EAAAwB,EAAA1B,EAAA/I,OAAA,QAAA+I,EAAAsB,IAAAQ,EAAAR,OAAA,SAAAuB,EAAA/K,EAAAgI,GAAA,IAAAE,EAAAF,EAAA7I,OAAAiJ,EAAApI,EAAAyI,SAAAP,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAAlI,EAAAyI,SAAA2C,SAAApD,EAAA7I,OAAA,SAAA6I,EAAAwB,IAAAzB,EAAAgD,EAAA/K,EAAAgI,GAAA,UAAAA,EAAA7I,SAAA,WAAA+I,IAAAF,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAAnD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAiB,EAAAnB,EAAApI,EAAAyI,SAAAT,EAAAwB,KAAA,aAAAlB,EAAAlH,KAAA,OAAA4G,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAAlB,EAAAkB,IAAAxB,EAAA8C,SAAA,KAAAjB,EAAA,IAAArB,EAAAF,EAAAkB,IAAA,OAAAhB,IAAAqC,MAAA7C,EAAAhI,EAAAsL,YAAA9C,EAAAhG,MAAAwF,EAAAuD,KAAAvL,EAAAwL,QAAA,WAAAxD,EAAA7I,SAAA6I,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,GAAAC,EAAA8C,SAAA,KAAAjB,GAAArB,GAAAR,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAjB,GAAA,SAAA4B,EAAA1D,GAAA,IAAA/H,EAAA,CAAA0L,OAAA3D,EAAA,SAAAA,IAAA/H,EAAA2L,SAAA5D,EAAA,SAAAA,IAAA/H,EAAA4L,WAAA7D,EAAA,GAAA/H,EAAA6L,SAAA9D,EAAA,SAAA+D,WAAAC,KAAA/L,GAAA,SAAAgM,EAAAjE,GAAA,IAAA/H,EAAA+H,EAAAkE,YAAA,GAAAjM,EAAAoB,KAAA,gBAAApB,EAAAwJ,IAAAzB,EAAAkE,WAAAjM,EAAA,SAAAqJ,EAAAtB,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAlC,QAAA4F,EAAA,WAAAS,OAAA,YAAA9B,EAAApK,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAgI,EAAAhI,EAAAwI,GAAA,GAAAR,EAAA,OAAAA,EAAAyB,KAAAzJ,GAAA,sBAAAA,EAAAuL,KAAA,OAAAvL,EAAA,IAAAmM,MAAAnM,EAAAgC,QAAA,KAAAoG,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAApI,EAAAgC,QAAA,GAAAkG,EAAAuB,KAAAzJ,EAAAoI,GAAA,OAAAmD,EAAA/I,MAAAxC,EAAAoI,GAAAmD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAArL,EAAA,2BAAA8J,EAAA7B,UAAA8B,EAAA3B,EAAAiC,EAAA,eAAA7H,MAAAuH,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAvH,MAAAsH,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA5I,EAAAqM,oBAAA,SAAAtE,GAAA,IAAA/H,EAAA,mBAAA+H,KAAAuE,YAAA,QAAAtM,QAAA8J,GAAA,uBAAA9J,EAAAoM,aAAApM,EAAA6D,QAAA7D,EAAAuM,KAAA,SAAAxE,GAAA,OAAA3E,OAAAoJ,eAAApJ,OAAAoJ,eAAAzE,EAAAgC,IAAAhC,EAAA0E,UAAA1C,EAAAjB,EAAAf,EAAAa,EAAA,sBAAAb,EAAAE,UAAA7E,OAAAgG,OAAAiB,GAAAtC,GAAA/H,EAAA0M,MAAA,SAAA3E,GAAA,OAAA2C,QAAA3C,IAAAuC,EAAAE,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAA1I,EAAAwK,gBAAAxK,EAAA2M,MAAA,SAAA5E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAjJ,SAAA,IAAAmJ,EAAA,IAAAgC,EAAAtB,EAAAnB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAtI,EAAAqM,oBAAArE,GAAAQ,IAAA+C,OAAAzF,MAAA,SAAAiC,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAvF,MAAAgG,EAAA+C,WAAAjB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAArK,EAAA4M,KAAA,SAAA7E,GAAA,IAAA/H,EAAAoD,OAAA2E,GAAAC,EAAA,WAAAE,KAAAlI,EAAAgI,EAAA+D,KAAA7D,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAhG,QAAA,KAAA+F,EAAAC,EAAA8E,MAAA,GAAA/E,KAAA/H,EAAA,OAAAuL,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAAvL,EAAAoK,SAAAf,EAAApB,UAAA,CAAAqE,YAAAjD,EAAA6C,MAAA,SAAAlM,GAAA,QAAA+M,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAlD,EAAA,KAAA8C,MAAA,OAAAC,SAAA,UAAA3L,OAAA,YAAAqK,IAAAzB,EAAA,KAAA+D,WAAAjG,QAAAmG,IAAAhM,EAAA,QAAAgI,KAAA,WAAAA,EAAAgF,OAAA,IAAA9E,EAAAuB,KAAA,KAAAzB,KAAAmE,OAAAnE,EAAAiF,MAAA,WAAAjF,GAAAD,IAAAmF,KAAA,gBAAArC,MAAA,MAAA9C,EAAA,KAAA+D,WAAA,GAAAG,WAAA,aAAAlE,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,YAAA2D,MAAAjC,kBAAA,SAAAlL,GAAA,QAAA6K,KAAA,MAAA7K,EAAA,IAAAgI,EAAA,cAAAoF,EAAAlF,EAAAE,GAAA,OAAAI,EAAApH,KAAA,QAAAoH,EAAAgB,IAAAxJ,EAAAgI,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,KAAAK,EAAA,QAAAA,EAAA,KAAA0D,WAAA9J,OAAA,EAAAoG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAwD,WAAA1D,GAAAI,EAAAF,EAAA2D,WAAA,YAAA3D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA,KAAAqB,KAAA,KAAArE,EAAAR,EAAAuB,KAAAnB,EAAA,YAAAM,EAAAV,EAAAuB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAmE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,WAAAoB,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAlD,GAAA,QAAAqE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAA/C,EAAA,UAAAgC,MAAA,kDAAAmC,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAA/H,GAAA,QAAAgI,EAAA,KAAA8D,WAAA9J,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAI,EAAA,KAAA0D,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA,KAAAqB,MAAA7E,EAAAuB,KAAArB,EAAA,oBAAA2E,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA1L,MAAAsI,EAAAsD,aAAAtD,EAAA,UAAAE,EAAAF,IAAA2D,WAAA,UAAAzD,EAAApH,KAAA2G,EAAAS,EAAAgB,IAAAxJ,EAAAsI,GAAA,KAAAnJ,OAAA,YAAAoM,KAAAjD,EAAAsD,WAAA/B,GAAA,KAAAwD,SAAA7E,IAAA6E,SAAA,SAAAtF,EAAA/H,GAAA,aAAA+H,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,gBAAAzB,EAAA3G,MAAA,aAAA2G,EAAA3G,KAAA,KAAAmK,KAAAxD,EAAAyB,IAAA,WAAAzB,EAAA3G,MAAA,KAAA+L,KAAA,KAAA3D,IAAAzB,EAAAyB,IAAA,KAAArK,OAAA,cAAAoM,KAAA,kBAAAxD,EAAA3G,MAAApB,IAAA,KAAAuL,KAAAvL,GAAA6J,GAAAyD,OAAA,SAAAvF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA4D,aAAA7D,EAAA,YAAAsF,SAAArF,EAAAiE,WAAAjE,EAAA6D,UAAAG,EAAAhE,GAAA6B,IAAA0D,MAAA,SAAAxF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAiE,WAAA,aAAA/D,EAAA9G,KAAA,KAAAgH,EAAAF,EAAAsB,IAAAwC,EAAAhE,GAAA,OAAAI,GAAA,UAAAwC,MAAA,0BAAA4C,cAAA,SAAAxN,EAAAgI,EAAAE,GAAA,YAAA4C,SAAA,CAAArC,SAAA2B,EAAApK,GAAAsL,WAAAtD,EAAAwD,QAAAtD,GAAA,cAAA/I,SAAA,KAAAqK,IAAAzB,GAAA8B,IAAA7J,EAqEe2Q,OAhEf,SAAejO,GACb,IAAA6M,EAAkCC,mBAAS,CAAEoB,MAAO,GAAIC,SAAU,KAAKpB,EAAAzM,YAAAuM,EAAA,GAAhEuB,EAASrB,EAAA,GAAEsB,EAAYtB,EAAA,GAC9BuB,EAA2BC,aAAYT,IAAMU,EAAAlO,YAAAgO,EAAA,GAAtCG,EAAKD,EAAA,GAAIE,EAAKF,EAAA,GAALE,MAEVC,EAAgB,eAAA9O,EAAAgM,YAAAzG,KAAAyE,MAAG,SAAAiC,EAAO8C,GAAK,IAAAC,EAAArK,EAAA,OAAAY,KAAAoB,MAAA,SAAAuF,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAlD,MAAA,OACZ,OAAvB+F,EAAME,iBAAiB/C,EAAA1B,KAAA,EAAA0B,EAAAlD,KAAA,EAEU4F,EAAM,CACnChC,UAAW,CAAEyB,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,YACxD,KAAD,EAFIU,EAAgB9C,EAAAzD,KAGhB9D,EAAQqK,EAAiB5L,KAAKwL,MAAMjK,MAC1C8H,EAAKmC,MAAMjK,GAAOuH,EAAAlD,KAAA,gBAAAkD,EAAA1B,KAAA,EAAA0B,EAAAgD,GAAAhD,EAAA,SAElBpO,QAAQC,IAAGmO,EAAAgD,IAAI,yBAAAhD,EAAAvB,UAAAsB,EAAA,kBAElB,gBAXqBkD,GAAA,OAAAnP,EAAAmM,MAAA,KAAAC,YAAA,GAahBgD,EAAe,SAACL,GACpB,IAAAM,EAAwBN,EAAM9K,OAAtB3C,EAAI+N,EAAJ/N,KAAMrB,EAAKoP,EAALpP,MACduO,EAAY1P,wBAAC,GACRyP,GAAS,GAAAe,aAAA,GACXhO,EAAOrB,MAIZ,OACEU,IAAAC,cAAA,OAAKa,UAAU,kBACbd,IAAAC,cAACc,IAAI,CAACC,GAAG,WAAU,uBAEnBhB,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,QAAM2O,SAAUT,GACdnO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,SAAQ,kBACvB7O,IAAAC,cAAA,SACEmD,YAAY,qBACZzC,KAAK,QACLzC,KAAK,QACLgF,GAAG,QACHG,SAAUoL,KAGdzO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,OAAM,aACrB7O,IAAAC,cAAA,SACEmD,YAAY,SACZzC,KAAK,WACLzC,KAAK,WACLgF,GAAG,MACHG,SAAUoL,KAGbP,EACClO,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGa,UAAU,cAAa,2CAE1B,KACJd,IAAAC,cAAA,OAAKa,UAAU,qBACbd,IAAAC,cAAA,UAAQ/B,KAAK,UAAS,c,cC9DhC0G,GAAA,kBAAA9H,GAAA,IAAA+H,EAAA/H,EAAA,GAAAgI,EAAA5E,OAAA6E,UAAAC,EAAAF,EAAAG,eAAAC,EAAAhF,OAAAiF,gBAAA,SAAAN,EAAA/H,EAAAgI,GAAAD,EAAA/H,GAAAgI,EAAAxF,OAAA8F,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAf,EAAA/H,EAAAgI,GAAA,OAAA5E,OAAAiF,eAAAN,EAAA/H,EAAA,CAAAwC,MAAAwF,EAAAe,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAlB,EAAA/H,GAAA,IAAA8I,EAAA,aAAAf,GAAAe,EAAA,SAAAf,EAAA/H,EAAAgI,GAAA,OAAAD,EAAA/H,GAAAgI,GAAA,SAAAkB,EAAAnB,EAAA/H,EAAAgI,EAAAE,GAAA,IAAAI,EAAAtI,KAAAiI,qBAAAkB,EAAAnJ,EAAAmJ,EAAAX,EAAApF,OAAAgG,OAAAd,EAAAL,WAAAS,EAAA,IAAAW,EAAAnB,GAAA,WAAAE,EAAAI,EAAA,WAAAhG,MAAA8G,EAAAvB,EAAAC,EAAAU,KAAAF,EAAA,SAAAe,EAAAxB,EAAA/H,EAAAgI,GAAA,WAAA5G,KAAA,SAAAoI,IAAAzB,EAAA0B,KAAAzJ,EAAAgI,IAAA,MAAAD,GAAA,OAAA3G,KAAA,QAAAoI,IAAAzB,IAAA/H,EAAAkJ,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAA7G,OAAA8G,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAnC,GAAAE,EAAAuB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA9B,UAAAkB,EAAAlB,UAAA7E,OAAAgG,OAAAY,GAAA,SAAAM,EAAAvC,GAAA,0BAAAlC,SAAA,SAAA7F,GAAA8I,EAAAf,EAAA/H,GAAA,SAAA+H,GAAA,YAAAwC,QAAAvK,EAAA+H,SAAA,SAAAyC,EAAAzC,EAAA/H,GAAA,SAAAyK,EAAAzC,EAAAI,EAAAE,EAAAE,GAAA,IAAAE,EAAAa,EAAAxB,EAAAC,GAAAD,EAAAK,GAAA,aAAAM,EAAAtH,KAAA,KAAAwH,EAAAF,EAAAc,IAAAE,EAAAd,EAAApG,MAAA,OAAAkH,GAAA,iBAAAA,GAAAxB,EAAAuB,KAAAC,EAAA,WAAA1J,EAAAV,QAAAoK,EAAAgB,SAAA5E,MAAA,SAAAiC,GAAA0C,EAAA,OAAA1C,EAAAO,EAAAE,MAAA,SAAAT,GAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,MAAAxI,EAAAV,QAAAoK,GAAA5D,MAAA,SAAAiC,GAAAa,EAAApG,MAAAuF,EAAAO,EAAAM,MAAA,SAAAb,GAAA,OAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,QAAAE,EAAAc,KAAA,IAAAxB,EAAAI,EAAA,gBAAA5F,MAAA,SAAAuF,EAAAG,GAAA,SAAAyC,IAAA,WAAA3K,GAAA,SAAAA,EAAAgI,GAAAyC,EAAA1C,EAAAG,EAAAlI,EAAAgI,MAAA,OAAAA,MAAAlC,KAAA6E,YAAA,SAAArB,EAAAtJ,EAAAgI,EAAAE,GAAA,IAAAE,EAAAsB,EAAA,gBAAApB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,UAAAiB,MAAA,mCAAAxC,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAAhG,MAAAuF,EAAA8C,MAAA,OAAA3C,EAAA/I,OAAAmJ,EAAAJ,EAAAsB,IAAAhB,IAAA,KAAAE,EAAAR,EAAA4C,SAAA,GAAApC,EAAA,KAAAE,EAAAmC,EAAArC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAV,EAAA/I,OAAA+I,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAsB,SAAA,aAAAtB,EAAA/I,OAAA,IAAAiJ,IAAAsB,EAAA,MAAAtB,EAAAwB,EAAA1B,EAAAsB,IAAAtB,EAAAgD,kBAAAhD,EAAAsB,SAAA,WAAAtB,EAAA/I,QAAA+I,EAAAiD,OAAA,SAAAjD,EAAAsB,KAAApB,EAAAuB,EAAA,IAAAK,EAAAT,EAAAvJ,EAAAgI,EAAAE,GAAA,cAAA8B,EAAA5I,KAAA,IAAAgH,EAAAF,EAAA2C,KAAAjB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAArH,MAAAwH,EAAAR,IAAAqB,KAAA3C,EAAA2C,MAAA,UAAAb,EAAA5I,OAAAgH,EAAAwB,EAAA1B,EAAA/I,OAAA,QAAA+I,EAAAsB,IAAAQ,EAAAR,OAAA,SAAAuB,EAAA/K,EAAAgI,GAAA,IAAAE,EAAAF,EAAA7I,OAAAiJ,EAAApI,EAAAyI,SAAAP,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAAlI,EAAAyI,SAAA2C,SAAApD,EAAA7I,OAAA,SAAA6I,EAAAwB,IAAAzB,EAAAgD,EAAA/K,EAAAgI,GAAA,UAAAA,EAAA7I,SAAA,WAAA+I,IAAAF,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAAnD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAiB,EAAAnB,EAAApI,EAAAyI,SAAAT,EAAAwB,KAAA,aAAAlB,EAAAlH,KAAA,OAAA4G,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAAlB,EAAAkB,IAAAxB,EAAA8C,SAAA,KAAAjB,EAAA,IAAArB,EAAAF,EAAAkB,IAAA,OAAAhB,IAAAqC,MAAA7C,EAAAhI,EAAAsL,YAAA9C,EAAAhG,MAAAwF,EAAAuD,KAAAvL,EAAAwL,QAAA,WAAAxD,EAAA7I,SAAA6I,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,GAAAC,EAAA8C,SAAA,KAAAjB,GAAArB,GAAAR,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAjB,GAAA,SAAA4B,EAAA1D,GAAA,IAAA/H,EAAA,CAAA0L,OAAA3D,EAAA,SAAAA,IAAA/H,EAAA2L,SAAA5D,EAAA,SAAAA,IAAA/H,EAAA4L,WAAA7D,EAAA,GAAA/H,EAAA6L,SAAA9D,EAAA,SAAA+D,WAAAC,KAAA/L,GAAA,SAAAgM,EAAAjE,GAAA,IAAA/H,EAAA+H,EAAAkE,YAAA,GAAAjM,EAAAoB,KAAA,gBAAApB,EAAAwJ,IAAAzB,EAAAkE,WAAAjM,EAAA,SAAAqJ,EAAAtB,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAlC,QAAA4F,EAAA,WAAAS,OAAA,YAAA9B,EAAApK,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAgI,EAAAhI,EAAAwI,GAAA,GAAAR,EAAA,OAAAA,EAAAyB,KAAAzJ,GAAA,sBAAAA,EAAAuL,KAAA,OAAAvL,EAAA,IAAAmM,MAAAnM,EAAAgC,QAAA,KAAAoG,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAApI,EAAAgC,QAAA,GAAAkG,EAAAuB,KAAAzJ,EAAAoI,GAAA,OAAAmD,EAAA/I,MAAAxC,EAAAoI,GAAAmD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAArL,EAAA,2BAAA8J,EAAA7B,UAAA8B,EAAA3B,EAAAiC,EAAA,eAAA7H,MAAAuH,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAvH,MAAAsH,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA5I,EAAAqM,oBAAA,SAAAtE,GAAA,IAAA/H,EAAA,mBAAA+H,KAAAuE,YAAA,QAAAtM,QAAA8J,GAAA,uBAAA9J,EAAAoM,aAAApM,EAAA6D,QAAA7D,EAAAuM,KAAA,SAAAxE,GAAA,OAAA3E,OAAAoJ,eAAApJ,OAAAoJ,eAAAzE,EAAAgC,IAAAhC,EAAA0E,UAAA1C,EAAAjB,EAAAf,EAAAa,EAAA,sBAAAb,EAAAE,UAAA7E,OAAAgG,OAAAiB,GAAAtC,GAAA/H,EAAA0M,MAAA,SAAA3E,GAAA,OAAA2C,QAAA3C,IAAAuC,EAAAE,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAA1I,EAAAwK,gBAAAxK,EAAA2M,MAAA,SAAA5E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAjJ,SAAA,IAAAmJ,EAAA,IAAAgC,EAAAtB,EAAAnB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAtI,EAAAqM,oBAAArE,GAAAQ,IAAA+C,OAAAzF,MAAA,SAAAiC,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAvF,MAAAgG,EAAA+C,WAAAjB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAArK,EAAA4M,KAAA,SAAA7E,GAAA,IAAA/H,EAAAoD,OAAA2E,GAAAC,EAAA,WAAAE,KAAAlI,EAAAgI,EAAA+D,KAAA7D,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAhG,QAAA,KAAA+F,EAAAC,EAAA8E,MAAA,GAAA/E,KAAA/H,EAAA,OAAAuL,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAAvL,EAAAoK,SAAAf,EAAApB,UAAA,CAAAqE,YAAAjD,EAAA6C,MAAA,SAAAlM,GAAA,QAAA+M,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAlD,EAAA,KAAA8C,MAAA,OAAAC,SAAA,UAAA3L,OAAA,YAAAqK,IAAAzB,EAAA,KAAA+D,WAAAjG,QAAAmG,IAAAhM,EAAA,QAAAgI,KAAA,WAAAA,EAAAgF,OAAA,IAAA9E,EAAAuB,KAAA,KAAAzB,KAAAmE,OAAAnE,EAAAiF,MAAA,WAAAjF,GAAAD,IAAAmF,KAAA,gBAAArC,MAAA,MAAA9C,EAAA,KAAA+D,WAAA,GAAAG,WAAA,aAAAlE,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,YAAA2D,MAAAjC,kBAAA,SAAAlL,GAAA,QAAA6K,KAAA,MAAA7K,EAAA,IAAAgI,EAAA,cAAAoF,EAAAlF,EAAAE,GAAA,OAAAI,EAAApH,KAAA,QAAAoH,EAAAgB,IAAAxJ,EAAAgI,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,KAAAK,EAAA,QAAAA,EAAA,KAAA0D,WAAA9J,OAAA,EAAAoG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAwD,WAAA1D,GAAAI,EAAAF,EAAA2D,WAAA,YAAA3D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA,KAAAqB,KAAA,KAAArE,EAAAR,EAAAuB,KAAAnB,EAAA,YAAAM,EAAAV,EAAAuB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAmE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,WAAAoB,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAlD,GAAA,QAAAqE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAA/C,EAAA,UAAAgC,MAAA,kDAAAmC,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAA/H,GAAA,QAAAgI,EAAA,KAAA8D,WAAA9J,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAI,EAAA,KAAA0D,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA,KAAAqB,MAAA7E,EAAAuB,KAAArB,EAAA,oBAAA2E,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA1L,MAAAsI,EAAAsD,aAAAtD,EAAA,UAAAE,EAAAF,IAAA2D,WAAA,UAAAzD,EAAApH,KAAA2G,EAAAS,EAAAgB,IAAAxJ,EAAAsI,GAAA,KAAAnJ,OAAA,YAAAoM,KAAAjD,EAAAsD,WAAA/B,GAAA,KAAAwD,SAAA7E,IAAA6E,SAAA,SAAAtF,EAAA/H,GAAA,aAAA+H,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,gBAAAzB,EAAA3G,MAAA,aAAA2G,EAAA3G,KAAA,KAAAmK,KAAAxD,EAAAyB,IAAA,WAAAzB,EAAA3G,MAAA,KAAA+L,KAAA,KAAA3D,IAAAzB,EAAAyB,IAAA,KAAArK,OAAA,cAAAoM,KAAA,kBAAAxD,EAAA3G,MAAApB,IAAA,KAAAuL,KAAAvL,GAAA6J,GAAAyD,OAAA,SAAAvF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA4D,aAAA7D,EAAA,YAAAsF,SAAArF,EAAAiE,WAAAjE,EAAA6D,UAAAG,EAAAhE,GAAA6B,IAAA0D,MAAA,SAAAxF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAiE,WAAA,aAAA/D,EAAA9G,KAAA,KAAAgH,EAAAF,EAAAsB,IAAAwC,EAAAhE,GAAA,OAAAI,GAAA,UAAAwC,MAAA,0BAAA4C,cAAA,SAAAxN,EAAAgI,EAAAE,GAAA,YAAA4C,SAAA,CAAArC,SAAA2B,EAAApK,GAAAsL,WAAAtD,EAAAwD,QAAAtD,GAAA,cAAA/I,SAAA,KAAAqK,IAAAzB,GAAA8B,IAAA7J,EAqFegS,OAhFf,SAAgBtP,GACd,IAAA6M,EAAkCC,mBAAS,CAAEoB,MAAO,GAAIC,SAAU,KAAKpB,EAAAzM,YAAAuM,EAAA,GAAhEuB,EAASrB,EAAA,GAAEsB,EAAYtB,EAAA,GAC9BuB,EAAkBC,aAAYP,IAAvBuB,EAAgCjP,YAAAgO,EAAA,GAAzB,GAERK,EAAgB,eAAA9O,EAAAgM,YAAAzG,KAAAyE,MAAG,SAAAiC,EAAO8C,GAAK,IAAAC,EAAArK,EAAA,OAAAY,KAAAoB,MAAA,SAAAuF,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAlD,MAAA,OACZ,OAAvB+F,EAAME,iBAAiB/C,EAAAlD,KAAA,EACQ0G,EAAQ,CACrC9C,UAAW,CACTyB,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBqB,UAAWpB,EAAUoB,UACrBC,SAAUrB,EAAUqB,YAErB,KAAD,EAPIZ,EAAgB9C,EAAAzD,KAQhB9D,EAAQqK,EAAiB5L,KAAKsM,QAAQ/K,MAC5C8H,EAAKmC,MAAMjK,GAAO,wBAAAuH,EAAAvB,UAAAsB,OACnB,gBAZqBkD,GAAA,OAAAnP,EAAAmM,MAAA,KAAAC,YAAA,GAchBgD,EAAe,SAACL,GACpB,IAAAM,EAAwBN,EAAM9K,OAAtB3C,EAAI+N,EAAJ/N,KAAMrB,EAAKoP,EAALpP,MACduO,EAAY1P,wBAAC,GACRyP,GAAS,GAAAe,aAAA,GACXhO,EAAOrB,MAIZ,OACEU,IAAAC,cAAA,OAAKa,UAAU,kBACbd,IAAAC,cAACc,IAAI,CAACC,GAAG,UAAS,sBAElBhB,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,QAAM2O,SAAUT,GACdnO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,aAAY,eAC3B7O,IAAAC,cAAA,SACEmD,YAAY,QACZzC,KAAK,YACLzC,KAAK,YACLgF,GAAG,YACHG,SAAUoL,KAGdzO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,YAAW,cAC1B7O,IAAAC,cAAA,SACEmD,YAAY,OACZzC,KAAK,WACLzC,KAAK,WACLgF,GAAG,WACHG,SAAUoL,KAGdzO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,SAAQ,UACvB7O,IAAAC,cAAA,SACEmD,YAAY,qBACZzC,KAAK,QACLzC,KAAK,QACLgF,GAAG,QACHG,SAAUoL,KAGdzO,IAAAC,cAAA,OAAKa,UAAU,+BACbd,IAAAC,cAAA,SAAO4O,QAAQ,OAAM,aACrB7O,IAAAC,cAAA,SACEmD,YAAY,SACZzC,KAAK,WACLzC,KAAK,WACLgF,GAAG,MACHG,SAAUoL,KAGdzO,IAAAC,cAAA,OAAKa,UAAU,qBACbd,IAAAC,cAAA,UAAQ/B,KAAK,UAAS,cCtBjBgR,OArDf,WAqCE,OACElP,IAAAC,cAAA,UAAQa,UAAU,iBAChBd,IAAAC,cAAA,UACED,IAAAC,cAACc,IAAI,CAACC,GAAG,KACPhB,IAAAC,cAAA,QAAMsD,KAAK,MAAMC,aAAW,gBAAe,sBAAU,eAKzDxD,IAAAC,cAAA,WA3CE6L,EAAKC,WAEL/L,IAAAC,cAAA,MAAIa,UAAU,YACZd,IAAAC,cAAA,MAAIa,UAAU,QACZd,IAAAC,cAACc,IAAI,CAACC,GAAG,iBAAgB,kBAI3BhB,IAAAC,cAAA,MAAIa,UAAU,QAEZd,IAAAC,cAAA,KAAGkP,KAAK,IAAI9N,QAAS,kBAAMyK,EAAKsD,WAAU,YAQ9CpP,IAAAC,cAAA,MAAIa,UAAU,YACZd,IAAAC,cAAA,MAAIa,UAAU,QACZd,IAAAC,cAACc,IAAI,CAACC,GAAG,WAAU,WAIrBhB,IAAAC,cAAA,MAAIa,UAAU,QACZd,IAAAC,cAACc,IAAI,CAACC,GAAG,UAAS,c,cC/B9B4D,GAAA,kBAAA9H,GAAA,IAAA+H,EAAA/H,EAAA,GAAAgI,EAAA5E,OAAA6E,UAAAC,EAAAF,EAAAG,eAAAC,EAAAhF,OAAAiF,gBAAA,SAAAN,EAAA/H,EAAAgI,GAAAD,EAAA/H,GAAAgI,EAAAxF,OAAA8F,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAf,EAAA/H,EAAAgI,GAAA,OAAA5E,OAAAiF,eAAAN,EAAA/H,EAAA,CAAAwC,MAAAwF,EAAAe,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAlB,EAAA/H,GAAA,IAAA8I,EAAA,aAAAf,GAAAe,EAAA,SAAAf,EAAA/H,EAAAgI,GAAA,OAAAD,EAAA/H,GAAAgI,GAAA,SAAAkB,EAAAnB,EAAA/H,EAAAgI,EAAAE,GAAA,IAAAI,EAAAtI,KAAAiI,qBAAAkB,EAAAnJ,EAAAmJ,EAAAX,EAAApF,OAAAgG,OAAAd,EAAAL,WAAAS,EAAA,IAAAW,EAAAnB,GAAA,WAAAE,EAAAI,EAAA,WAAAhG,MAAA8G,EAAAvB,EAAAC,EAAAU,KAAAF,EAAA,SAAAe,EAAAxB,EAAA/H,EAAAgI,GAAA,WAAA5G,KAAA,SAAAoI,IAAAzB,EAAA0B,KAAAzJ,EAAAgI,IAAA,MAAAD,GAAA,OAAA3G,KAAA,QAAAoI,IAAAzB,IAAA/H,EAAAkJ,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAA7G,OAAA8G,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAnC,GAAAE,EAAAuB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAE,EAAAN,EAAA9B,UAAAkB,EAAAlB,UAAA7E,OAAAgG,OAAAY,GAAA,SAAAM,EAAAvC,GAAA,0BAAAlC,SAAA,SAAA7F,GAAA8I,EAAAf,EAAA/H,GAAA,SAAA+H,GAAA,YAAAwC,QAAAvK,EAAA+H,SAAA,SAAAyC,EAAAzC,EAAA/H,GAAA,SAAAyK,EAAAzC,EAAAI,EAAAE,EAAAE,GAAA,IAAAE,EAAAa,EAAAxB,EAAAC,GAAAD,EAAAK,GAAA,aAAAM,EAAAtH,KAAA,KAAAwH,EAAAF,EAAAc,IAAAE,EAAAd,EAAApG,MAAA,OAAAkH,GAAA,iBAAAA,GAAAxB,EAAAuB,KAAAC,EAAA,WAAA1J,EAAAV,QAAAoK,EAAAgB,SAAA5E,MAAA,SAAAiC,GAAA0C,EAAA,OAAA1C,EAAAO,EAAAE,MAAA,SAAAT,GAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,MAAAxI,EAAAV,QAAAoK,GAAA5D,MAAA,SAAAiC,GAAAa,EAAApG,MAAAuF,EAAAO,EAAAM,MAAA,SAAAb,GAAA,OAAA0C,EAAA,QAAA1C,EAAAO,EAAAE,QAAAE,EAAAc,KAAA,IAAAxB,EAAAI,EAAA,gBAAA5F,MAAA,SAAAuF,EAAAG,GAAA,SAAAyC,IAAA,WAAA3K,GAAA,SAAAA,EAAAgI,GAAAyC,EAAA1C,EAAAG,EAAAlI,EAAAgI,MAAA,OAAAA,MAAAlC,KAAA6E,YAAA,SAAArB,EAAAtJ,EAAAgI,EAAAE,GAAA,IAAAE,EAAAsB,EAAA,gBAAApB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,UAAAiB,MAAA,mCAAAxC,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAAhG,MAAAuF,EAAA8C,MAAA,OAAA3C,EAAA/I,OAAAmJ,EAAAJ,EAAAsB,IAAAhB,IAAA,KAAAE,EAAAR,EAAA4C,SAAA,GAAApC,EAAA,KAAAE,EAAAmC,EAAArC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAV,EAAA/I,OAAA+I,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAsB,SAAA,aAAAtB,EAAA/I,OAAA,IAAAiJ,IAAAsB,EAAA,MAAAtB,EAAAwB,EAAA1B,EAAAsB,IAAAtB,EAAAgD,kBAAAhD,EAAAsB,SAAA,WAAAtB,EAAA/I,QAAA+I,EAAAiD,OAAA,SAAAjD,EAAAsB,KAAApB,EAAAuB,EAAA,IAAAK,EAAAT,EAAAvJ,EAAAgI,EAAAE,GAAA,cAAA8B,EAAA5I,KAAA,IAAAgH,EAAAF,EAAA2C,KAAAjB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAArH,MAAAwH,EAAAR,IAAAqB,KAAA3C,EAAA2C,MAAA,UAAAb,EAAA5I,OAAAgH,EAAAwB,EAAA1B,EAAA/I,OAAA,QAAA+I,EAAAsB,IAAAQ,EAAAR,OAAA,SAAAuB,EAAA/K,EAAAgI,GAAA,IAAAE,EAAAF,EAAA7I,OAAAiJ,EAAApI,EAAAyI,SAAAP,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAAlI,EAAAyI,SAAA2C,SAAApD,EAAA7I,OAAA,SAAA6I,EAAAwB,IAAAzB,EAAAgD,EAAA/K,EAAAgI,GAAA,UAAAA,EAAA7I,SAAA,WAAA+I,IAAAF,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAAnD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAiB,EAAAnB,EAAApI,EAAAyI,SAAAT,EAAAwB,KAAA,aAAAlB,EAAAlH,KAAA,OAAA4G,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAAlB,EAAAkB,IAAAxB,EAAA8C,SAAA,KAAAjB,EAAA,IAAArB,EAAAF,EAAAkB,IAAA,OAAAhB,IAAAqC,MAAA7C,EAAAhI,EAAAsL,YAAA9C,EAAAhG,MAAAwF,EAAAuD,KAAAvL,EAAAwL,QAAA,WAAAxD,EAAA7I,SAAA6I,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,GAAAC,EAAA8C,SAAA,KAAAjB,GAAArB,GAAAR,EAAA7I,OAAA,QAAA6I,EAAAwB,IAAA,IAAA6B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAjB,GAAA,SAAA4B,EAAA1D,GAAA,IAAA/H,EAAA,CAAA0L,OAAA3D,EAAA,SAAAA,IAAA/H,EAAA2L,SAAA5D,EAAA,SAAAA,IAAA/H,EAAA4L,WAAA7D,EAAA,GAAA/H,EAAA6L,SAAA9D,EAAA,SAAA+D,WAAAC,KAAA/L,GAAA,SAAAgM,EAAAjE,GAAA,IAAA/H,EAAA+H,EAAAkE,YAAA,GAAAjM,EAAAoB,KAAA,gBAAApB,EAAAwJ,IAAAzB,EAAAkE,WAAAjM,EAAA,SAAAqJ,EAAAtB,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAlC,QAAA4F,EAAA,WAAAS,OAAA,YAAA9B,EAAApK,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAgI,EAAAhI,EAAAwI,GAAA,GAAAR,EAAA,OAAAA,EAAAyB,KAAAzJ,GAAA,sBAAAA,EAAAuL,KAAA,OAAAvL,EAAA,IAAAmM,MAAAnM,EAAAgC,QAAA,KAAAoG,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAApI,EAAAgC,QAAA,GAAAkG,EAAAuB,KAAAzJ,EAAAoI,GAAA,OAAAmD,EAAA/I,MAAAxC,EAAAoI,GAAAmD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAArL,EAAA,2BAAA8J,EAAA7B,UAAA8B,EAAA3B,EAAAiC,EAAA,eAAA7H,MAAAuH,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAvH,MAAAsH,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA5I,EAAAqM,oBAAA,SAAAtE,GAAA,IAAA/H,EAAA,mBAAA+H,KAAAuE,YAAA,QAAAtM,QAAA8J,GAAA,uBAAA9J,EAAAoM,aAAApM,EAAA6D,QAAA7D,EAAAuM,KAAA,SAAAxE,GAAA,OAAA3E,OAAAoJ,eAAApJ,OAAAoJ,eAAAzE,EAAAgC,IAAAhC,EAAA0E,UAAA1C,EAAAjB,EAAAf,EAAAa,EAAA,sBAAAb,EAAAE,UAAA7E,OAAAgG,OAAAiB,GAAAtC,GAAA/H,EAAA0M,MAAA,SAAA3E,GAAA,OAAA2C,QAAA3C,IAAAuC,EAAAE,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAA1I,EAAAwK,gBAAAxK,EAAA2M,MAAA,SAAA5E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAjJ,SAAA,IAAAmJ,EAAA,IAAAgC,EAAAtB,EAAAnB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAtI,EAAAqM,oBAAArE,GAAAQ,IAAA+C,OAAAzF,MAAA,SAAAiC,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAvF,MAAAgG,EAAA+C,WAAAjB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAArK,EAAA4M,KAAA,SAAA7E,GAAA,IAAA/H,EAAAoD,OAAA2E,GAAAC,EAAA,WAAAE,KAAAlI,EAAAgI,EAAA+D,KAAA7D,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAhG,QAAA,KAAA+F,EAAAC,EAAA8E,MAAA,GAAA/E,KAAA/H,EAAA,OAAAuL,EAAA/I,MAAAuF,EAAAwD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAAvL,EAAAoK,SAAAf,EAAApB,UAAA,CAAAqE,YAAAjD,EAAA6C,MAAA,SAAAlM,GAAA,QAAA+M,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAlD,EAAA,KAAA8C,MAAA,OAAAC,SAAA,UAAA3L,OAAA,YAAAqK,IAAAzB,EAAA,KAAA+D,WAAAjG,QAAAmG,IAAAhM,EAAA,QAAAgI,KAAA,WAAAA,EAAAgF,OAAA,IAAA9E,EAAAuB,KAAA,KAAAzB,KAAAmE,OAAAnE,EAAAiF,MAAA,WAAAjF,GAAAD,IAAAmF,KAAA,gBAAArC,MAAA,MAAA9C,EAAA,KAAA+D,WAAA,GAAAG,WAAA,aAAAlE,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,YAAA2D,MAAAjC,kBAAA,SAAAlL,GAAA,QAAA6K,KAAA,MAAA7K,EAAA,IAAAgI,EAAA,cAAAoF,EAAAlF,EAAAE,GAAA,OAAAI,EAAApH,KAAA,QAAAoH,EAAAgB,IAAAxJ,EAAAgI,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA7I,OAAA,OAAA6I,EAAAwB,IAAAzB,KAAAK,EAAA,QAAAA,EAAA,KAAA0D,WAAA9J,OAAA,EAAAoG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAwD,WAAA1D,GAAAI,EAAAF,EAAA2D,WAAA,YAAA3D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA,KAAAqB,KAAA,KAAArE,EAAAR,EAAAuB,KAAAnB,EAAA,YAAAM,EAAAV,EAAAuB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAmE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,WAAAoB,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAlD,GAAA,QAAAqE,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAA/C,EAAA,UAAAgC,MAAA,kDAAAmC,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAA/H,GAAA,QAAAgI,EAAA,KAAA8D,WAAA9J,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAI,EAAA,KAAA0D,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA,KAAAqB,MAAA7E,EAAAuB,KAAArB,EAAA,oBAAA2E,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA1L,MAAAsI,EAAAsD,aAAAtD,EAAA,UAAAE,EAAAF,IAAA2D,WAAA,UAAAzD,EAAApH,KAAA2G,EAAAS,EAAAgB,IAAAxJ,EAAAsI,GAAA,KAAAnJ,OAAA,YAAAoM,KAAAjD,EAAAsD,WAAA/B,GAAA,KAAAwD,SAAA7E,IAAA6E,SAAA,SAAAtF,EAAA/H,GAAA,aAAA+H,EAAA3G,KAAA,MAAA2G,EAAAyB,IAAA,gBAAAzB,EAAA3G,MAAA,aAAA2G,EAAA3G,KAAA,KAAAmK,KAAAxD,EAAAyB,IAAA,WAAAzB,EAAA3G,MAAA,KAAA+L,KAAA,KAAA3D,IAAAzB,EAAAyB,IAAA,KAAArK,OAAA,cAAAoM,KAAA,kBAAAxD,EAAA3G,MAAApB,IAAA,KAAAuL,KAAAvL,GAAA6J,GAAAyD,OAAA,SAAAvF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA4D,aAAA7D,EAAA,YAAAsF,SAAArF,EAAAiE,WAAAjE,EAAA6D,UAAAG,EAAAhE,GAAA6B,IAAA0D,MAAA,SAAAxF,GAAA,QAAA/H,EAAA,KAAA8L,WAAA9J,OAAA,EAAAhC,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAA8D,WAAA9L,GAAA,GAAAgI,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAiE,WAAA,aAAA/D,EAAA9G,KAAA,KAAAgH,EAAAF,EAAAsB,IAAAwC,EAAAhE,GAAA,OAAAI,GAAA,UAAAwC,MAAA,0BAAA4C,cAAA,SAAAxN,EAAAgI,EAAAE,GAAA,YAAA4C,SAAA,CAAArC,SAAA2B,EAAApK,GAAAsL,WAAAtD,EAAAwD,QAAAtD,GAAA,cAAA/I,SAAA,KAAAqK,IAAAzB,GAAA8B,IAAA7J,EAyCeuS,OApCf,WACE,IAAAvB,EAAmBC,aAAYR,IAAxB+B,EAAkCxP,YAAAgO,EAAA,GAA1B,GAwBf,OAtBApL,qBAAU,WACgB,SAAA6M,IAgBvB,OAhBuBA,EAAAlE,YAAAzG,KAAAyE,MAAxB,SAAAiC,IAAA,IAAA/M,EAAAH,EAAAoR,EAAA/M,EAAA,OAAAmC,KAAAoB,MAAA,SAAAuF,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAlD,MAAA,cAAAkD,EAAAlD,KAAA,EACqBtM,EAAW,OAAQ,OAAO,KAAD,EACE,GADxCwC,EAAIgN,EAAAzD,OACJ1J,EAAWG,EAAKG,KAAI,SAAC6B,GAAI,OAAKA,EAAK3C,QAE5BkB,OAAO,CAADyM,EAAAlD,KAAA,gBAAAkD,EAAAlD,KAAA,EACMiH,EAAS,CAAErD,UAAW,CAAE7N,cAAc,KAAD,EAAAoR,EAAAjE,EAAAzD,KAApDrF,EAAI+M,EAAJ/M,KACYA,EAAK6M,SAASlR,SAEtBuE,SAAQ,SAACpC,GACnBxE,EAAW,OAAQ,SAAUwE,MAC5B,QAGLkP,YAAW,WACT/S,OAAOgI,SAASvE,OAAO,OACtB,KAAM,yBAAAoL,EAAAvB,UAAAsB,QACVE,MAAA,KAAAC,YAjBc,WACS8D,EAAA/D,MAAC,KAADC,WAkBxBiE,KACC,CAACJ,IAGFtP,IAAAC,cAAA,WACED,IAAAC,cAAC6M,GAAS,KACR9M,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,gCACJD,IAAAC,cAAA,UAAI,kDCeG0P,OA7Cf,WACE,IACIC,EADInN,EAASF,YAASJ,GAAlBM,KAOR,OAJIA,IACFmN,EAAOnN,EAAKmN,MAIZ5P,IAAAC,cAAAD,IAAA2M,SAAA,KACE3M,IAAAC,cAAA,OAAKa,UAAU,kBACbd,IAAAC,cAACc,IAAI,CAACC,GAAG,KAAI,2BAEZ4O,EACC5P,IAAAC,cAAAD,IAAA2M,SAAA,KACE3M,IAAAC,cAAA,UAAI,qBACiB2P,EAAKZ,UAAU,IAAEY,EAAKX,UAE1CW,EAAKC,OAAOnR,KAAI,SAACoR,GAAK,OACrB9P,IAAAC,cAAA,OAAK6C,IAAKgN,EAAMlS,IAAKkD,UAAU,QAC7Bd,IAAAC,cAAA,UACG,IAAIkE,KAAK1C,SAASqO,EAAMC,eAAeC,sBAE1ChQ,IAAAC,cAAA,OAAKa,UAAU,YACZgP,EAAM1R,SAASM,KAAI,SAAAW,EAA8B4Q,GAAK,IAAhCrS,EAAGyB,EAAHzB,IAAK8C,EAAKrB,EAALqB,MAAOC,EAAItB,EAAJsB,KAAMC,EAAKvB,EAALuB,MAAK,OAC5CZ,IAAAC,cAAA,OAAK6C,IAAKmN,EAAOnP,UAAU,kBACzBd,IAAAC,cAACc,IAAI,CAACC,GAAE,aAAAxC,OAAeZ,IACrBoC,IAAAC,cAAA,OAAKgB,IAAKN,EAAMO,IAAG,WAAA1C,OAAakC,KAChCV,IAAAC,cAAA,SAAIU,IAENX,IAAAC,cAAA,WACED,IAAAC,cAAA,YAAM,IAAEW,cAQpB,QCzBNsP,GAAWC,YAAe,CAC9BC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAClR,GAAmB,IAAfmR,EAAOnR,EAAPmR,QAC1BxM,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACLiM,QAAOrS,wBAAA,GACFqS,GAAO,IACVC,cAAezM,EAAK,UAAAxF,OAAawF,GAAU,SAK3C0M,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAAS7R,OAAO0R,IACtBW,MAAO,IAAIC,MA0BEC,OAvBf,WACE,OACE/Q,IAAAC,cAAC+Q,IAAc,CAACN,OAAQA,IACtB1Q,IAAAC,cAACgR,IAAM,KACLjR,IAAAC,cAAA,WACED,IAAAC,cAACb,EAAa,KACZY,IAAAC,cAACiP,GAAG,MACJlP,IAAAC,cAACiR,IAAM,KACLlR,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAWpF,KACjClM,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,SAASC,UAAW7D,KACtCzN,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,UAAUC,UAAWxC,KACvC9O,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,WAAWC,UAAWjC,KACxCrP,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,gBAAgBC,UAAW3B,KAC7C3P,IAAAC,cAACkR,IAAK,CAACC,OAAK,EAACC,KAAK,gBAAgBC,UAAWnF,KAC7CnM,IAAAC,cAACkR,IAAK,CAACG,UAAWjE,WCzC1BkE,GAAcC,QACW,cAA7B9U,OAAOgI,SAAS+M,UAEa,UAA7B/U,OAAOgI,SAAS+M,UAEhB/U,OAAOgI,SAAS+M,SAASC,MACvB,2DAyCJ,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThP,MAAK,SAAAqP,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnU,QACf8T,UAAUC,cAAcO,YAI1BnV,QAAQC,IACN,iHAKEyU,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9U,QAAQC,IAAI,sCAGRyU,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B5H,OAAM,SAAA6D,GACL/Q,QAAQ+Q,MAAM,4CAA6CA,MC7FjEuE,IAASC,OACP1S,IAAAC,cAACD,IAAM2S,WAAU,KACf3S,IAAAC,cAAC8Q,GAAG,OAEN6B,SAASC,eAAe,SDYnB,SAAkBhB,GACvB,GAEE,kBAAmBC,UAAW,CAI9B,GADkB,IAAIgB,IAAIC,GAAwBrW,OAAOgI,SAASyK,MACpD6D,SAAWtW,OAAOgI,SAASsO,OAIvC,OAGFtW,OAAOuW,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,GAAApT,OAAMuU,GAAsB,sBAEnCxB,KAgEV,SAAiCK,EAAOC,GAEtCqB,MAAMtB,EAAO,CACXpB,QAAS,CAAE,iBAAkB,YAE5B5N,MAAK,SAAAuQ,GAEJ,IAAMC,EAAcD,EAAS3C,QAAQ6C,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM5Q,MAAK,SAAAqP,GACjCA,EAAawB,aAAa7Q,MAAK,WAC7BlG,OAAOgI,SAASgP,eAKpB/B,GAAgBC,EAAOC,MAG1BxH,OAAM,WACLlN,QAAQC,IACN,oEAvFAuW,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM5Q,MAAK,WACjCzF,QAAQC,IACN,iHAMJuU,GAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.f76e62d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}